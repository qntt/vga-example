DEPTH = 4096;
WIDTH = 32;
ADDRESS_RADIX = DEC;
DATA_RADIX = BIN;
CONTENT
BEGIN
0000 : 00011000000000000000000101100000; -- jal clearDMEM

0001 : 00101100000000000000000000000001; -- addi $s0, $0, 1

0002 : 00101010000000000000000000000001; --   addi $t0, $0, 1

0003 : 00010100000100000000000000000001; --   bne $s0, $t0, endstage1       # Check the value of stage

0004 : 00011000000000000000000000110111; --     jal init

0005 : 00101010000000000000000000000010; --     addi $t0, $0, 2

0006 : 00010100000100000000000000101000; --     bne $s0, $t0, endloop

0007 : 00011000000000000000000010100001; --     jal moveSnake

0008 : 01000010010000000000011100111111; --     lw $t1, 1855($0)

0009 : 00110000000100100000000000000001; --     blt $0, $t1, skipCheckCollisionsStage2ForSnake1

0010 : 00011000000000000000000100110100; --     jal checkCollisions

0011 : 00011000000000000000000011111010; --     jal checkAppleCollision

0012 : 00011000000000000000000100100010; --     jal checkInvincibility

0013 : 00011000000000000000000001111011; --     jal decrementCounters

0014 : 01000010011000100000000001101110; --   lw $t1, 110($s1)

0015 : 01000010101001000000000001111000; --   lw $t2, 120($s2)

0016 : 00111010010000000000000001100100; --   sw $t1, 100($0)

0017 : 00111010100000000000000001100101; --   sw $t2, 101($0)

0018 : 01000010000000000000011100011110; --   lw $t0, 1822($0)

0019 : 01000010010000000000011100011111; --   lw $t1, 1823($0)

0020 : 00111010000000000000000001100110; --   sw $t0, 102($0)

0021 : 00111010010000000000000001100111; --   sw $t1, 103($0)

0022 : 00111100000000000000000001101000; --   sw $s0, 104($0)

0023 : 00111100010000000000000001101001; --   sw $s1, 105($0)

0024 : 00111100100000000000000001101010; --   sw $s2, 106($0)

0025 : 01000010000000000000011100001000; --   lw $t0, 1800($0)

0026 : 00111010000000000000000001101011; --   sw $t0, 107($0)

0027 : 01000010000000000000011101000010; --   lw $t0, 1858($0)

0028 : 01000010010000000000011101000011; --   lw $t1, 1859($0)

0029 : 00111010000000000000000001101100; --   sw $t0, 108($0)

0030 : 00111010010000000000000001101101; --   sw $t1, 109($0)

0031 : 01000010000000000000011100111111; --   lw $t0, 1855($0)  # timer 1

0032 : 01000010010000000000011101000001; --   lw $t1, 1857($0)  # timer 2

0033 : 01000010100000000000011101000100; --   lw $t2, 1860($0)  # position

0034 : 00111010000000000000000010000010; --   sw $t0, 130($0)

0035 : 00111010010000000000000010000011; --   sw $t1, 131($0)

0036 : 00111010100000000000000010000100; --   sw $t2, 132($0)

0037 : 01000010000000000000011100011100; --   lw $t0, 1820($0)

0038 : 01000010010000000000011100011101; --   lw $t1, 1821($0)

0039 : 00111010000000000000000010000101; --   sw $t0, 133($0)

0040 : 00111010010000000000000010000110; --   sw $t1, 134($0)

0041 : 00011000000000000000000000110000; --   jal displaySnake

0042 : 00101010000000000001001110001000; --   addi $t0, $0, 5000

0043 : 00101010010000000000000001010000; --   addi $t1, $0, 80

0044 : 00000010010100001001000000011000; --   mul $t1, $t0, $t1

0045 : 00000001000000001001000000000000; --   add $a0, $0, $t1

0046 : 00011000000000000000000101011100; --   jal delay

0047 : 00001000000000000000000000000010; --     j loop

0048 : 00101010000000000000000001100100; --   addi $t0, $0, 100

0049 : 00101010010000000000000010000110; --   addi $t1, $0, 134

0050 : 00110010010100000000000000000011; --   blt $t1, $t0, returnToLoop

0051 : 01111000000100000000000000000000; --   loadSnake $t0

0052 : 00101010000100000000000000000001; --     addi $t0, $t0, 1

0053 : 00001000000000000000000000110010; --   j displayLoop

0054 : 00100111110000000000000000000000; --   jr $ra

0055 : 00101100010000000000000000000000; --   addi $s1, $0, 0           # pointer of snake 1 is 0th position in array

0056 : 00101100100000000000000000000000; --   addi $s2, $0, 0           # pointer of snake 1 is 0th position in array

0057 : 00101010000000000000000000010100; --   addi $t0, $0, 20

0058 : 00111010000000000000011001000010; --   sw $t0, 1602($0)

0059 : 00111010000000000000011001110100; --   sw $t0, 1652($0)

0060 : 00101010010000000000000000010101; --   addi $t1, $0, 21

0061 : 00111010000000000000011001000001; --   sw $t0, 1601($0)

0062 : 00111010010000000000011001110011; --   sw $t1, 1651($0)

0063 : 00101010010000000000000000010110; --   addi $t1, $0, 22

0064 : 00111010000000000000011001000000; --   sw $t0, 1600($0)

0065 : 00111010010000000000011001110010; --   sw $t1, 1650($0)

0066 : 00101010000000000000000000011110; --   addi $t0, $0, 30

0067 : 00101010010000000000000000001011; --   addi $t1, $0, 11

0068 : 00111010000000000000011010100110; --   sw $t0, 1702($0)

0069 : 00111010010000000000011011011000; --   sw $t1, 1752($0)

0070 : 00101010010000000000000000001100; --   addi $t1, $0, 12

0071 : 00111010000000000000011010100101; --   sw $t0, 1701($0)

0072 : 00111010010000000000011011010111; --   sw $t1, 1751($0)

0073 : 00101010010000000000000000001101; --   addi $t1, $0, 13

0074 : 00111010000000000000011010100100; --   sw $t0, 1700($0)

0075 : 00111010010000000000011011010110; --   sw $t1, 1750($0)

0076 : 00101010000000000000000000000001; --   addi $t0, $0, 1

0077 : 00101010010000000000001100110100; --   addi $t1, $0, 820

0078 : 00111010000100100000100000110100; --   sw $t0, 2100($t1)

0079 : 00111010000100100000100000110101; --   sw $t0, 2101($t1)

0080 : 00111010000100100000100000110110; --   sw $t0, 2102($t1)

0081 : 00101010000000000000000000000010; --   addi $t0, $0, 2

0082 : 00101010010000000000010010111011; --   addi $t1, $0, 1211

0083 : 00111010000100100000100000110100; --   sw $t0, 2100($t1)

0084 : 00111010000100100000100000110101; --   sw $t0, 2101($t1)

0085 : 00111010000100100000100000110110; --   sw $t0, 2102($t1)

0086 : 00101010000000000000001100110100; --   addi $t0, $0, 820

0087 : 00111010000000000000000001110000; --   sw $t0, 112($0)

0088 : 00101010000000000000001100110101; --   addi $t0, $0, 821

0089 : 00111010000000000000000001101111; --   sw $t0, 111($0)

0090 : 00101010000000000000001100110110; --   addi $t0, $0, 822

0091 : 00111010000000000000000001101110; --   sw $t0, 110($0)

0092 : 00101010000000000000010010111011; --   addi $t0, $0, 1211

0093 : 00111010000000000000000001111010; --   sw $t0, 122($0)

0094 : 00101010000000000000010010111100; --   addi $t0, $0, 1212

0095 : 00111010000000000000000001111001; --   sw $t0, 121($0)

0096 : 00101010000000000000010010111101; --   addi $t0, $0, 1213

0097 : 00111010000000000000000001111000; --   sw $t0, 120($0)

0098 : 00101010000000000000000000000011; --   addi $t0, $0, 3

0099 : 00111010000000000000000000000000; --   sw $t0, 0($0)

0100 : 00111010000000000000000000000001; --   sw $t0, 1($0)

0101 : 00111010000000000000000000000010; --   sw $t0, 2($0)

0102 : 00101010100000000000000000000011; --   addi $t2, $0, 3         # store length of snake1

0103 : 00111010100000000000011100011110; --   sw $t2, 1822($0)

0104 : 00101010100000000000000000000011; --   addi $t2, $0, 3         # store length of snake2

0105 : 00111010100000000000011100011111; --   sw $t2, 1823($0)

0106 : 00101101010000000000000000000010; --   addi $s5, $0, 2

0107 : 00101101100000000000000000000010; --   addi $s6, $0, 2

0108 : 00111000000000000000011100011100; --   sw $0, 1820($0)

0109 : 00111000000000000000011100011101; --   sw $0, 1821($0)

0110 : 00101010000000000000000001100100; --   addi $t0, $0, 100

0111 : 00111010000000000000011101000010; --   sw $t0, 1858($0)

0112 : 00111010000000000000011101000011; --   sw $t0, 1859($0)

0113 : 00101010010000000000000110101001; --   addi $t1, $0, 425

0114 : 00111010010000000000011100001000; --   sw $t1, 1800($0)

0115 : 00101010100000000000000000000011; --   addi $t2, $0, 3

0116 : 00111010100000000000100111011101; --   sw $t2, 2525($0)

0117 : 00101010000000000000000000001010; --   addi $t0, $0, 10

0118 : 00101010010000000000000000011001; --   addi $t1, $0, 25

0119 : 00111010000000000000011100010010; --   sw $t0, 1810($0)

0120 : 00111010010000000000011100010011; --   sw $t1, 1811($0)

0121 : 00101100000000000000000000000010; --   addi $s0, $0, 2

0122 : 00100111110000000000000000000000; --   jr $ra

0123 : 01000010000000000000011101000010; -- 	lw $t0, 1858($0)

0124 : 00101010010000000000000000000001; -- 	addi $t1, $0, 1

0125 : 00000010000100001001000000000100; -- 	sub $t0, $t0, $t1

0126 : 00111010000000000000011101000010; -- 	sw $t0, 1858($0)

0127 : 00010010000000000000000000000001; -- 	bne $t0, $0, heartTimerNotZero

0128 : 00101100000000000000000000000011; -- 	addi $s0, $0, 3

0129 : 01000010000000000000011100111111; --   lw $t0, 1855($0)

0130 : 00101010010000000000000000000001; --   addi $t1, $0, 1

0131 : 00000010000100001001000000000100; --   sub $t0, $t0, $t1

0132 : 00111010000000000000011100111111; --   sw $t0, 1855($0)

0133 : 00110000000100000000000000000001; --   blt $0, $t0, invincibilityTimerGreaterThan0

0134 : 00111000000000000000011100111111; --   sw $0, 1855($0)

0135 : 00100111110000000000000000000000; -- 	jr $ra

0136 : 01000010001000100000011001000000; --   lw $t0, 1600($s1) # row

0137 : 01000010011000100000011001110010; --   lw $t1, 1650($s1) # col

0138 : 01000010100000000000011100010010; --   lw $t2, 1810($0)  # appleRow

0139 : 01000010110000000000011100010011; --   lw $t3, 1811($0)  # appleCol

0140 : 00000011000100001010000000000100; --   sub $t4, $t0, $t2 # row - appleRow

0141 : 00000011010101001000000000000100; --   sub $t5, $t2, $t0 # appleRow - row

0142 : 00110000000110000000000000000001; --   blt $0, $t4, getAppleRowMinusRow

0143 : 00001000000000000000000010010001; --   j getColumnAI

0144 : 00000011000000001101000000000000; --   add $t4, $0, $t5

0145 : 00000011010100101011000000000100; --   sub $t5, $t1, $t3 # col - appleCol

0146 : 00000011100101101001000000000100; --   sub $t6, $t3, $t1 # appleCol - col

0147 : 00110000000110100000000000000001; --   blt $0, $t5, getAppleColMinusCol

0148 : 00001000000000000000000010010110; --   j doneWithGettingDelta

0149 : 00000011010000001110000000000000; --   add $t5, $0, $t6

0150 : 00110011000110100000000000000101; --   blt $t4, $t5, moveUpOrDownAI

0151 : 00110010100100000000000000000010; --   blt $t2, $t0, moveDownAI

0152 : 00101101100000000000000000000001; --   addi $s6, $0, 1

0153 : 00001000000000000000000010100001; --   j afterMoveAI

0154 : 00101101100000000000000000000011; --   addi $s6, $0, 3

0155 : 00001000000000000000000010100001; --   j afterMoveAI

0156 : 00110010110100100000000000000010; --   blt $t3, $t1, moveRightAI

0157 : 00101101100000000000000000000100; --   addi $s6, $0, 4

0158 : 00001000000000000000000010100001; --   j afterMoveAI

0159 : 00101101100000000000000000000010; --   addi $s6, $0, 2

0160 : 00001000000000000000000010100001; --   j afterMoveAI

0161 : 01000010010000000000011100011110; --   lw $t1, 1822($0)

0162 : 00000010101000101001000000000000; --   add $t2, $s1, $t1             # tail1 = head1 + length1

0163 : 00101010000000000000000000000001; --   addi $t0, $0, 1

0164 : 00000010100101001000000000000100; --   sub $t2, $t2, $t0             # tail1 = tail1 - 1

0165 : 00101010000000000000000000001010; --   addi $t0, $0, 10

0166 : 00110010100100000000000000000010; --   blt $t2, $t0, skipUpdateTail1

0167 : 00101010000000000000000000001010; --   addi $t0, $0, 10

0168 : 00000010100101001000000000000100; --   sub $t2, $t2, $t0             # tail1 = tail1 - 10

0169 : 00000010110000010001000000000000; --   add $t3, $0, $s1

0170 : 00010100010000000000000000000010; --   bne $s1, $0, head1NotZero         # if (head1==0) head1 = 49;

0171 : 00101100010000000000000000001001; --   addi $s1, $0, 9

0172 : 00001000000000000000000010101111; --   j afterUpdateHead1

0173 : 00101010000000000000000000000001; --   addi $t0, $0, 1

0174 : 00000100011000101000000000000100; --   sub $s1, $s1, $t0

0175 : 01000011000101000000000001101110; --   lw $t4, 110($t2)   # board position of snake1

0176 : 00111000000110000000100000110100; --   sw $0, 2100($t4)     # board[snake1[tail1]] = 0;

0177 : 00101011000000000000011001000001; --   addi $t4, $0, 1601    # set to 1601 (reset the tail)

0178 : 00111011000101000000000001101110; --   sw $t4, 110($t2)

0179 : 00101010000000000000000000000001; --   addi $t0, $0, 1

0180 : 00010101010100000000000000001111; --   bne $s5, $t0, notMoveUp

0181 : 01000010000101100000011001000000; --   lw $t0, 1600($t3)

0182 : 01000010010101100000011001110010; --   lw $t1, 1650($t3)

0183 : 00101010100000000000000000000001; --   addi $t2, $0, 1

0184 : 00000011000100001010000000000100; --   sub $t4, $t0, $t2                 # row = row - 1

0185 : 00111011001000100000011001000000; --   sw $t4, 1600($s1)

0186 : 00111010011000100000011001110010; --   sw $t1, 1650($s1)

0187 : 00101011010000000000000000101000; --   addi $t5, $0, 40

0188 : 01000011100101100000000001101110; --   lw $t6, 110($t3)

0189 : 00000011110111001101000000000100; --   sub $t7, $t6, $t5

0190 : 00111011111000100000000001101110; --   sw $t7, 110($s1)

0191 : 00101010000000000000000000000010; --   addi $t0, $0, 2

0192 : 00111010001000100000000000000000; --   sw $t0, 0($s1)

0193 : 00110011000000000000000000000001; --   blt $t4, $0, collisionUpTrue1

0194 : 00001000000000000000000011000100; --   j notMoveUp

0195 : 00101101110000000000000000000001; --   addi $s7, $0, 1

0196 : 00101010000000000000000000000010; --   addi $t0, $0, 2

0197 : 00010101010100000000000000010000; --   bne $s5, $t0, notMoveRight

0198 : 01000010000101100000011001000000; --   lw $t0, 1600($t3)

0199 : 01000010010101100000011001110010; --   lw $t1, 1650($t3)

0200 : 00101010100000000000000000000001; --   addi $t2, $0, 1

0201 : 00000011000100101010000000000000; --   add $t4, $t1, $t2                 # col = col + 1

0202 : 00111011001000100000011001110010; --   sw $t4, 1650($s1)

0203 : 00111010001000100000011001000000; --   sw $t0, 1600($s1)

0204 : 00101011010000000000000000000001; --   addi $t5, $0, 1

0205 : 01000011100101100000000001101110; --   lw $t6, 110($t3)

0206 : 00000011110111001101000000000000; --   add $t7, $t6, $t5

0207 : 00111011111000100000000001101110; --   sw $t7, 110($s1)

0208 : 00101010000000000000000000000011; --   addi $t0, $0, 3

0209 : 00111010001000100000000000000000; --   sw $t0, 0($s1)

0210 : 00101010000000000000000000100111; --   addi $t0, $0, 39

0211 : 00110010000110000000000000000001; --   blt $t0, $t4, collisionRightTrue1     # if (col > 39)

0212 : 00001000000000000000000011010110; --   j notMoveRight

0213 : 00101101110000000000000000000001; --   addi $s7, $0, 1

0214 : 00101010000000000000000000000011; --   addi $t0, $0, 3

0215 : 00010101010100000000000000010000; --   bne $s5, $t0, notMoveDown

0216 : 01000010000101100000011001000000; --   lw $t0, 1600($t3)

0217 : 01000010010101100000011001110010; --   lw $t1, 1650($t3)

0218 : 00101010100000000000000000000001; --   addi $t2, $0, 1

0219 : 00000011000100001010000000000000; --   add $t4, $t0, $t2                 # row = row + 1

0220 : 00111011001000100000011001000000; --   sw $t4, 1600($s1)

0221 : 00111010011000100000011001110010; --   sw $t1, 1650($s1)

0222 : 00101011010000000000000000101000; --   addi $t5, $0, 40

0223 : 01000011100101100000000001101110; --   lw $t6, 110($t3)

0224 : 00000011110111001101000000000000; --   add $t7, $t6, $t5

0225 : 00111011111000100000000001101110; --   sw $t7, 110($s1)

0226 : 00101010000000000000000000000000; --   addi $t0, $0, 0

0227 : 00111010001000100000000000000000; --   sw $t0, 0($s1)

0228 : 00101010000000000000000000100111; --   addi $t0, $0, 39

0229 : 00110010000110000000000000000001; --   blt $t0, $t4, collisionDownTrue1      # if (row > 39)

0230 : 00001000000000000000000011101000; --   j notMoveDown

0231 : 00101101110000000000000000000001; --   addi $s7, $0, 1

0232 : 00101010000000000000000000000100; --   addi $t0, $0, 4

0233 : 00010101010100000000000000001111; --   bne $s5, $t0, notMoveLeft

0234 : 01000010000101100000011001000000; --   lw $t0, 1600($t3)

0235 : 01000010010101100000011001110010; --   lw $t1, 1650($t3)

0236 : 00101010100000000000000000000001; --   addi $t2, $0, 1

0237 : 00000011000100101010000000000100; --   sub $t4, $t1, $t2                 # col = col - 1

0238 : 00111011001000100000011001110010; --   sw $t4, 1650($s1)

0239 : 00111010001000100000011001000000; --   sw $t0, 1600($s1)

0240 : 00101011010000000000000000000001; --   addi $t5, $0, 1

0241 : 01000011100101100000000001101110; --   lw $t6, 110($t3)

0242 : 00000011110111001101000000000100; --   sub $t7, $t6, $t5

0243 : 00111011111000100000000001101110; --   sw $t7, 110($s1)

0244 : 00101010000000000000000000000001; --   addi $t0, $0, 1

0245 : 00111010001000100000000000000000; --   sw $t0, 0($s1)

0246 : 00110011000000011111111111110000; --   blt $t4, $0, collisionDownTrue1       # if (col < 0)

0247 : 00001000000000000000000011111001; --   j notMoveLeft

0248 : 00101101110000000000000000000001; --   addi $s7, $0, 1

0249 : 00100111110000000000000000000000; --   jr $ra

0250 : 01000010001000100000000001101110; --   lw $t0, 110($s1)		# snake1[head1]

0251 : 01000010010000000000011100001000; --   lw $t1, 1800($0)		# apple position

0252 : 00010010000100100000000000000001; --   bne $t0, $t1, checkAppleSnake2

0253 : 00001000000000000000000100000010; --   j snake1EatsApple

0254 : 01000010001001000000000001111000; --   lw $t0, 120($s2)    # snake2[head2]

0255 : 01000010010000000000011100001000; --   lw $t1, 1800($0)    # apple position

0256 : 00010010000100100000000000100000; --   bne $t0, $t1, noEatApple

0257 : 00001000000000000000000100001001; --   j snake2EatsApple

0258 : 01000010010000000000011100011110; --   lw $t1, 1822($0)		# length of snake 1 (t1)

0259 : 00101010010100100000000000000001; --   addi $t1, $t1, 1

0260 : 00111010010000000000011100011110; --   sw $t1, 1822($0)

0261 : 01000010000000000000011100011100; --   lw $t0, 1820($0)

0262 : 00101010000100000000000000000001; --   addi $t0, $t0, 1

0263 : 00111010000000000000011100011100; --   sw $t0, 1820($0)

0264 : 00001000000000000000000100010000; --   j beginAppleGenerationLoop

0265 : 01000010010000000000011100011111; --   lw $t1, 1823($0)    # length of snake 2 (t1)

0266 : 00101010010100100000000000000001; --   addi $t1, $t1, 1

0267 : 00111010010000000000011100011111; --   sw $t1, 1823($0)

0268 : 01000010000000000000011100011101; --   lw $t0, 1821($0)

0269 : 00101010000100000000000000000001; --   addi $t0, $t0, 1

0270 : 00111010000000000000011100011101; --   sw $t0, 1821($0)

0271 : 00001000000000000000000100010000; --   j beginAppleGenerationLoop

0272 : 00000010000000011101000000000000; --   add $t0, $0, $29    # r29 stores the random num

0273 : 01000010010100000000100000110100; --   lw $t1, 2100($t0)

0274 : 00010010010000011111111111111101; --   bne $t1, $0, beginAppleGenerationLoop

0275 : 00111010000000000000011100001000; --   sw $t0, 1800($0)

0276 : 00101010100000000000000000000011; --   addi $t2, $0, 3

0277 : 00111010100100000000100000110100; --   sw $t2, 2100($t0)

0278 : 00101010010000000000000000101000; --   addi $t1, $0, 40

0279 : 00000010100100001001000000011100; --   div $t2, $t0, $t1     # row = a/n

0280 : 00000010110100101010000000011000; --   mul $t3, $t1, $t2     # n * int(a/n)

0281 : 00000011000100001011000000000100; --   sub $t4, $t0, $t3     # a - (n * int(a/n))

0282 : 00111010100000000000011100010010; --   sw $t2, 1810($0)

0283 : 00111011000000000000011100010011; --   sw $t4, 1811($0)

0284 : 00101010000000000000000001100100; --   addi $t0, $0, 100

0285 : 00111010000000000000011101000010; --   sw $t0, 1858($0)

0286 : 01000010000000000000011101000101; --   lw $t0, 1861($0)

0287 : 00101010000100000000000000000001; --   addi $t0, $t0, 1

0288 : 00111010000000000000011101000101; --   sw $t0, 1861($0)

0289 : 00100111110000000000000000000000; --   jr $ra

0290 : 01000010000000000000011101000101; --   lw $t0, 1861($0) # counter

0291 : 01000010010000000000011101000100; --   lw $t1, 1860($0) # position

0292 : 00101010100000000000000000000101; --   addi $t2, $0, 5

0293 : 00010010000101000000000000000111; --   bne $t0, $t2, noGenerateNewInvincibility

0294 : 00111000000000000000011101000101; --   sw $0, 1861($0)

0295 : 00000010000000011101000000000000; --   add $t0, $0, $29    # r29 stores the random num

0296 : 01000010010100000000100000110100; --   lw $t1, 2100($t0)

0297 : 00010010010000011111111111111101; --   bne $t1, $0, beginInvincibilityGenerationLoop

0298 : 00111010000000000000011101000100; --   sw $t0, 1860($0)

0299 : 00101010100000000000000000000100; --   addi $t2, $0, 4

0300 : 00111010100100000000100000110100; --   sw $t2, 2100($t0)

0301 : 01000010001000100000011111010000; --   lw $t0, 2000($s1)

0302 : 01000010010000000000011101000100; --   lw $t1, 1860($0)

0303 : 00010010000100100000000000000011; --   bne $t0, $t1, noCollisionInvincibility

0304 : 00101010100000000000000001100100; --   addi $t2, $0, 100

0305 : 00111010100000000000011100111111; --   sw $t2, 1855($0)

0306 : 00111000000000000000011101000101; --   sw $0, 1861($0)

0307 : 00100111110000000000000000000000; --   jr $ra

0308 : 00101010000000000000000000000000; --   addi $t0, $0, 0

0309 : 00010101110100000000000000001101; --   bne $s7, $t0, endCheckSelfCollision		# branch because if isCollide1 is already 1, then no need to check for self-collisions

0310 : 01000010001000100000000001101110; --   lw $t0, 110($s1)		# snake1[head1]

0311 : 01000010010100000000100000110100; --   lw $t1, 2100($t0)		# boardValue

0312 : 00101010000000000000000000000001; --   addi $t0, $0, 1

0313 : 00010010010100000000000000000010; --   bne $t1, $t0, checkCollisionOtherSnake

0314 : 00101101110000000000000000000001; --   addi $s7, $0, 1

0315 : 00001000000000000000000101000011; --   j endCheckSelfCollision

0316 : 00101010000000000000000000000010; --   addi $t0, $0, 2

0317 : 00010010010100000000000000000010; --   bne $t1, $t0, checkSelfCollisionNoCollisions

0318 : 00101101110000000000000000000001; --   addi $s7, $0, 1

0319 : 00001000000000000000000101000011; --   j endCheckSelfCollision

0320 : 00101010000000000000000000000001; --   addi $t0, $0, 1

0321 : 01000010011000100000000001101110; --   lw $t1, 110($s1)

0322 : 00111010000100100000100000110100; --   sw $t0, 2100($t1)

0323 : 00101010000000000000000000000001; -- 	addi $t0, $0, 1

0324 : 00010101110100000000000000000010; -- 	bne $s7, $t0, noCollision

0325 : 00101100000000000000000000000011; -- 	addi $s0, $0, 3

0326 : 00101101110000000000000000000000; -- 	addi $s7, $0, 0

0327 : 00100111110000000000000000000000; -- 	jr $ra

0328 : 00101010000000000000000000000000; --   addi $t0, $0, 0

0329 : 00010101110100000000000000001101; --   bne $s7, $t0, endCheckSelfCollision2   # branch because if isCollide1 is already 1, then no need to check for self-collisions

0330 : 01000010001001000000000001111000; --   lw $t0, 120($s2)    # snake1[head1]

0331 : 01000010010100000000100000110100; --   lw $t1, 2100($t0)   # boardValue

0332 : 00101010000000000000000000000001; --   addi $t0, $0, 1

0333 : 00010010010100000000000000000010; --   bne $t1, $t0, checkCollisionOtherSnake2

0334 : 00101101110000000000000000000001; --   addi $s7, $0, 1

0335 : 00001000000000000000000101010111; --   j endCheckSelfCollision2

0336 : 00101010000000000000000000000010; --   addi $t0, $0, 2

0337 : 00010010010100000000000000000010; --   bne $t1, $t0, checkSelfCollisionNoCollisions2

0338 : 00101101110000000000000000000001; --   addi $s7, $0, 1

0339 : 00001000000000000000000101010111; --   j endCheckSelfCollision2

0340 : 00101010000000000000000000000010; --   addi $t0, $0, 2

0341 : 01000010011001000000000001111000; --   lw $t1, 120($s2)

0342 : 00111010000100100000100000110100; --   sw $t0, 2100($t1)

0343 : 00101010000000000000000000000001; --   addi $t0, $0, 1

0344 : 00010101110100000000000000000010; --   bne $s7, $t0, noCollision2

0345 : 00101100000000000000000000000011; --   addi $s0, $0, 3

0346 : 00101101110000000000000000000000; --   addi $s7, $0, 0

0347 : 00100111110000000000000000000000; --   jr $ra

0348 : 00101010000000000000000000000001; --   addi $t0, $0, 1

0349 : 00101010000100000000000000000001; --     addi $t0, $t0, 1

0350 : 00010010000010011111111111111110; --     bne $t0, $a0, delayloop1

0351 : 00100111110000000000000000000000; --   jr $ra

0352 : 00101010000000000000000000000000; -- 	addi $t0, $0, 0

0353 : 00101010010000000001000000000000; -- 	addi $t1, $0, 4096

0354 : 00110010010100000000000000000010; -- 		blt $t1, $t0, endClearDMEMLoop

0355 : 00111000000100000000000000000000; -- 		sw $0, 0($t0)

0356 : 00101010000100000000000000000001; -- 		addi $t0, $t0, 1

0357 : 00100111110000000000000000000000; -- 	jr $ra

0358 : 01000010010000000000011100011111; --   lw $t1, 1823($0)

0359 : 00000010101001001001000000000000; --   add $t2, $s2, $t1             # tail1 = head1 + length1

0360 : 00101010000000000000000000000001; --   addi $t0, $0, 1

0361 : 00000010100101001000000000000100; --   sub $t2, $t2, $t0             # tail1 = tail1 - 1

0362 : 00101010000000000000000000001010; --   addi $t0, $0, 10

0363 : 00110010100100000000000000000010; --   blt $t2, $t0, skipUpdateTail2

0364 : 00101010000000000000000000001010; --   addi $t0, $0, 10

0365 : 00000010100101001000000000000100; --   sub $t2, $t2, $t0             # tail1 = tail1 - 50

0366 : 00000010110000010010000000000000; --   add $t3, $0, $s2

0367 : 00010100100000000000000000000010; --   bne $s2, $0, head2NotZero2         # if (head1==0) head1 = 49;

0368 : 00101100100000000000000000001001; --   addi $s2, $0, 9

0369 : 00001000000000000000000101110100; --   j afterUpdateHead2

0370 : 00101010000000000000000000000001; --   addi $t0, $0, 1

0371 : 00000100101001001000000000000100; --   sub $s2, $s2, $t0

0372 : 01000011000101000000000001111000; --   lw $t4, 120($t2)   # board position of snake1

0373 : 00111000000110000000100000110100; --   sw $0, 2100($t4)     # board[snake1[tail1]] = 0;

0374 : 00101011000000000000011001000001; --   addi $t4, $0, 1601    # set to 1601 (reset the tail)

0375 : 00111011000101000000000001111000; --   sw $t4, 120($t2)

0376 : 00101010000000000000000000000001; --   addi $t0, $0, 1

0377 : 00010101100100000000000000001111; --   bne $s6, $t0, notMoveUp2

0378 : 01000010000101100000011010100100; --   lw $t0, 1700($t3)

0379 : 01000010010101100000011011010110; --   lw $t1, 1750($t3)

0380 : 00101010100000000000000000000001; --   addi $t2, $0, 1

0381 : 00000011000100001010000000000100; --   sub $t4, $t0, $t2                 # row = row - 1

0382 : 00111011001001000000011010100100; --   sw $t4, 1700($s2)

0383 : 00111010011001000000011011010110; --   sw $t1, 1750($s2)

0384 : 00101011010000000000000000101000; --   addi $t5, $0, 40

0385 : 01000011100101100000000001111000; --   lw $t6, 120($t3)

0386 : 00000011110111001101000000000100; --   sub $t7, $t6, $t5

0387 : 00111011111001000000000001111000; --   sw $t7, 120($s2)

0388 : 00101010000000000000000000000010; --   addi $t0, $0, 2

0389 : 00111010001001000000000000110010; --   sw $t0, 50($s2)

0390 : 00110011000000000000000000000001; --   blt $t4, $0, collisionUpTrue2

0391 : 00001000000000000000000110001001; --   j notMoveUp2

0392 : 00101101110000000000000000000001; --   addi $s7, $0, 1

0393 : 00101010000000000000000000000010; --   addi $t0, $0, 2

0394 : 00010101100100000000000000010000; --   bne $s6, $t0, notMoveRight2

0395 : 01000010000101100000011010100100; --   lw $t0, 1700($t3)

0396 : 01000010010101100000011011010110; --   lw $t1, 1750($t3)

0397 : 00101010100000000000000000000001; --   addi $t2, $0, 1

0398 : 00000011000100101010000000000000; --   add $t4, $t1, $t2                 # col = col + 1

0399 : 00111011001001000000011011010110; --   sw $t4, 1750($s2)

0400 : 00111010001001000000011010100100; --   sw $t0, 1700($s2)

0401 : 00101011010000000000000000000001; --   addi $t5, $0, 1

0402 : 01000011100101100000000001111000; --   lw $t6, 120($t3)

0403 : 00000011110111001101000000000000; --   add $t7, $t6, $t5

0404 : 00111011111001000000000001111000; --   sw $t7, 120($s2)

0405 : 00101010000000000000000000000011; --   addi $t0, $0, 3

0406 : 00111010001001000000000000110010; --   sw $t0, 50($s2)

0407 : 00101010000000000000000000100111; --   addi $t0, $0, 39

0408 : 00110010000110000000000000000001; --   blt $t0, $t4, collisionRightTrue2     # if (col > 39)

0409 : 00001000000000000000000110011011; --   j notMoveRight2

0410 : 00101101110000000000000000000001; --   addi $s7, $0, 1

0411 : 00101010000000000000000000000011; --   addi $t0, $0, 3

0412 : 00010101100100000000000000010000; --   bne $s6, $t0, notMoveDown2

0413 : 01000010000101100000011010100100; --   lw $t0, 1700($t3)

0414 : 01000010010101100000011011010110; --   lw $t1, 1750($t3)

0415 : 00101010100000000000000000000001; --   addi $t2, $0, 1

0416 : 00000011000100001010000000000000; --   add $t4, $t0, $t2                 # row = row + 1

0417 : 00111011001001000000011010100100; --   sw $t4, 1700($s2)

0418 : 00111010011001000000011011010110; --   sw $t1, 1750($s2)

0419 : 00101011010000000000000000101000; --   addi $t5, $0, 40

0420 : 01000011100101100000000001111000; --   lw $t6, 120($t3)

0421 : 00000011110111001101000000000000; --   add $t7, $t6, $t5

0422 : 00111011111001000000000001111000; --   sw $t7, 120($s2)

0423 : 00101010000000000000000000000000; --   addi $t0, $0, 0

0424 : 00111010001001000000000000110010; --   sw $t0, 50($s2)

0425 : 00101010000000000000000000100111; --   addi $t0, $0, 39

0426 : 00110010000110000000000000000001; --   blt $t0, $t4, collisionDownTrue2      # if (row > 39)

0427 : 00001000000000000000000110101101; --   j notMoveDown2

0428 : 00101101110000000000000000000001; --   addi $s7, $0, 1

0429 : 00101010000000000000000000000100; --   addi $t0, $0, 4

0430 : 00010101100100000000000000001111; --   bne $s6, $t0, notMoveLeft2

0431 : 01000010000101100000011010100100; --   lw $t0, 1700($t3)

0432 : 01000010010101100000011011010110; --   lw $t1, 1750($t3)

0433 : 00101010100000000000000000000001; --   addi $t2, $0, 1

0434 : 00000011000100101010000000000100; --   sub $t4, $t1, $t2                 # col = col - 1

0435 : 00111011001001000000011011010110; --   sw $t4, 1750($s2)

0436 : 00111010001001000000011010100100; --   sw $t0, 1700($s2)

0437 : 00101011010000000000000000000001; --   addi $t5, $0, 1

0438 : 01000011100101100000000001111000; --   lw $t6, 120($t3)

0439 : 00000011110111001101000000000100; --   sub $t7, $t6, $t5

0440 : 00111011111001000000000001111000; --   sw $t7, 120($s2)

0441 : 00101010000000000000000000000001; --   addi $t0, $0, 1

0442 : 00111010001001000000000000110010; --   sw $t0, 50($s2)

0443 : 00110011000000011111111111110000; --   blt $t4, $0, collisionDownTrue2       # if (col < 0)

0444 : 00001000000000000000000110111110; --   j notMoveLeft2

0445 : 00101101110000000000000000000001; --   addi $s7, $0, 1

0446 : 00100111110000000000000000000000; --   jr $ra
[0447..4095] : 00000000000000000000000000000000;
END;


